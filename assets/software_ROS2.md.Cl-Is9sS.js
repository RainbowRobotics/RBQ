import{_ as t,c as a,o as i,ae as e}from"./chunks/framework.DRno8Cka.js";const n="/RBQ/assets/rbqros2.BSax6FNQ.png",l="/RBQ/assets/gait_diagram.BAfQQldG.png",g=JSON.parse('{"title":"🖼️ RViz Visualization","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"software/ROS2.md","filePath":"software/ROS2.md","lastUpdated":null}'),r={name:"software/ROS2.md"};function o(h,s,p,d,k,b){return i(),a("div",null,s[0]||(s[0]=[e('<br><figure><img src="'+n+`" alt="missing"></figure><br><h2 id="📘-introduction" tabindex="-1">📘 Introduction <a class="header-anchor" href="#📘-introduction" aria-label="Permalink to &quot;📘 Introduction&quot;">​</a></h2><p>Welcome to the <strong>RBQ ROS 2 SDK Manual</strong>.</p><ul><li>This guide will help you quickly get started with controlling and visualizing the RBQ robot through ROS 2, both in simulation and on real hardware.</li></ul><br><h3 id="what-this-sdk-provides" tabindex="-1"><strong>What This SDK Provides</strong> <a class="header-anchor" href="#what-this-sdk-provides" aria-label="Permalink to &quot;**What This SDK Provides**&quot;">​</a></h3><blockquote><p>This SDK enables the following key features:</p></blockquote><ul><li><strong>Robot Control</strong>: Execute posture commands, gait switching, and position-based navigation.</li><li><strong>Sensor Feedback Streaming</strong>: Continuously stream IMU, foot contact, battery state, and more.</li><li><strong>Vision Data Streaming</strong>: Provides visual information from front, rear, and downward-facing cameras for perception and navigation.</li><li><strong>RViz2 Visualization</strong>: Visualize robot state and sensors like LiDAR in real-time.</li></ul><br><h3 id="💻-system-requirements" tabindex="-1"><strong>💻 System requirements</strong> <a class="header-anchor" href="#💻-system-requirements" aria-label="Permalink to &quot;**💻 System requirements**&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>Component</strong></th><th><strong>Require Setting</strong></th></tr></thead><tbody><tr><td>Operating System</td><td><img src="https://img.shields.io/badge/Ubuntu-22.04-E95420?logo=ubuntu&amp;logoColor=white"></td></tr><tr><td>ROS 2 Distro</td><td><img src="https://img.shields.io/badge/ROS2-Humble-green"></td></tr><tr><td>Python Version</td><td><img src="https://img.shields.io/badge/python-3.8%7C3.9%7C3.10-blue"></td></tr></tbody></table><br><h3 id="📝-below-instructions-assume-that-the-cli-terminal-commands-are-all-input-in-the-main-directory" tabindex="-1">📝 <em>Below instructions assume that the CLI terminal commands are all input in the <a href="https://github.com/RainbowRobotics/RBQ" target="_blank" rel="noreferrer">main directory</a>.</em> <a class="header-anchor" href="#📝-below-instructions-assume-that-the-cli-terminal-commands-are-all-input-in-the-main-directory" aria-label="Permalink to &quot;📝 *Below instructions assume that the CLI terminal commands are all input in the [main directory](https://github.com/RainbowRobotics/RBQ).*&quot;">​</a></h3><br><br><h2 id="🛠️-configuration" tabindex="-1"><strong>🛠️ Configuration</strong> <a class="header-anchor" href="#🛠️-configuration" aria-label="Permalink to &quot;**🛠️ Configuration**&quot;">​</a></h2><ul><li><p>This package is tested for <code>Ubuntu 22.04 and ROS 2 Humble</code>, which can be installed following command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/install/ros.bash</span></span></code></pre></div></li><li><p>Source <code>ROS Humble</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/ros/humble/setup.bash</span></span></code></pre></div></li><li><p>Initialize and <code>update ros dependencies</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div></li></ul><h2 id="📦-installation" tabindex="-1"><strong>📦 Installation</strong> <a class="header-anchor" href="#📦-installation" aria-label="Permalink to &quot;**📦 Installation**&quot;">​</a></h2><ul><li><p>Go-to the <code>ros2</code> directory and <code>install ros dependencies</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ros2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-paths</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-src</span></span></code></pre></div></li><li><p><code>Build rbq_ros2</code> packages</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --symlink-install</span></span></code></pre></div></li></ul><hr><h2 id="▶️-run-nodes" tabindex="-1"><strong>▶️ Run nodes</strong> <a class="header-anchor" href="#▶️-run-nodes" aria-label="Permalink to &quot;**▶️ Run nodes**&quot;">​</a></h2><ul><li><p>Run <code>rbq_driver</code></p><ul><li>For a simulation environment, append argument: <code>-s</code>.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ros2/install/local_setup.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rbq_driver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rbq_driver</span></span></code></pre></div><p><em>The RBQ driver contains all of the necessary topics for controlling RBQ over ROS 2</em></p><p><strong>rbq_driver process starts the following nodes:</strong></p><ul><li>Robot state publisher</li><li>Sensor feedback publishers (IMU, battery, foot contact)</li><li>Vision data publishers (camera streams from front, rear, and bottom sensors)</li><li>High-level command subscriber</li></ul></li><li><p>Run <code>rbq_description</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ros2/install/local_setup.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rbq_description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> description.launch.py</span></span></code></pre></div></li></ul><h2 id="🧪-test-list-active-topics" tabindex="-1">🧪 Test List Active Topics <a class="header-anchor" href="#🧪-test-list-active-topics" aria-label="Permalink to &quot;🧪 Test List Active Topics&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ros2/install/local_setup.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><ul><li>coming soon</li></ul><br><h2 id="state-acquisition" tabindex="-1">State acquisition <a class="header-anchor" href="#state-acquisition" aria-label="Permalink to &quot;State acquisition&quot;">​</a></h2><h3 id="🦿-1-gait-state-topics" tabindex="-1">🦿 1. Gait State Topics <a class="header-anchor" href="#🦿-1-gait-state-topics" aria-label="Permalink to &quot;🦿 1. Gait State Topics&quot;">​</a></h3><p>Gait state refers to the robot&#39;s current motion or posture mode.</p><p>Transitions between these states are triggered by incoming high-level commands, sensor conditions, or internal logic.</p><br><figure><img src="`+l+`" alt="missing"></figure><br><blockquote><p>Available Gait States :</p></blockquote><table tabindex="0"><thead><tr><th>State ID</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>-2</td><td>Fall Mode</td><td>Triggered upon unexpected loss of balance</td></tr><tr><td>-1</td><td>Control Off</td><td>All actuators disabled</td></tr><tr><td>0</td><td>Sitting</td><td>Low posture, resting on the ground</td></tr><tr><td>1</td><td>Standing</td><td>Neutral posture, ready to walk</td></tr><tr><td>2</td><td>Walk Mode</td><td>walking Trot gait</td></tr><tr><td>4</td><td>Stairs Mode</td><td>Stair-adaptive gait using camera sensor</td></tr><tr><td>5</td><td>Wave Mode</td><td>walking Walk gait</td></tr><tr><td>6</td><td>Run Mode</td><td>High-speed gait (if supported)</td></tr></tbody></table><br><blockquote><p>The <strong>Command topics</strong> in the second column are only available when the robot is in the corresponding <strong>Gait State</strong>. In contrast, <strong>Common Command topics</strong> and <strong>Power Control topics</strong> are always available regardless of the gait state.</p></blockquote><table class="tg"><thead><tr><th class="tg-0pky"><b>Gait State</b></th><th class="tg-0pky"><b>Command topics</b></th><th class="tg-0pky"><b>Common Command topics</b></th><th class="tg-0pky"><b>Power control topics</b></th></tr></thead><tbody><tr><td class="tg-0pky">Control Off</td><td class="tg-0pky">rbq/autoStart</td><td class="tg-0pky" rowspan="8">rbq/cmd_highLevel<br><br>rbq/emergency<br><br>rbq/staticLock<br>rbq/staticReady<br>rbq/staticGround<br><br>rbq/switchGamepadPort<br></td><td class="tg-0pky" rowspan="8">rbq/powerLeg<br>rbq/powerVisionPC<br>rbq/powerUsbHub<br>rbq/powerLidar<br>rbq/powerExt52v</td></tr><tr><td class="tg-0pky">Sitting Mode</td><td class="tg-0pky">rbq/stand<br>rbq/calibrateImu</td></tr><tr><td class="tg-0pky">Standing Mode</td><td class="tg-0pky"> rbq/sit                       <b>rbq/stairs</b><br>rbq/walk                    <b>rbq/wave</b><br>rbq/run<br><b>rbq/cmd_navigateTo</b><br>rbq/comEstimationCompensation</td></tr><tr><td class="tg-0pky">Walk Mode<br>(when robot stand by)</td><td class="tg-0pky">rbq/sit                       <b>rbq/stairs</b><br>rbq/walk                    <b>rbq/wave</b><br>rbq/run</td></tr><tr><td class="tg-0pky">Stairs Mode<br>(when robot stand by)</td><td class="tg-0pky">rbq/stand<br>rbq/walk</td></tr><tr><td class="tg-0pky">Run Mode</td><td class="tg-0pky">rbq/stand<br>rbq/walk</td></tr><tr><td class="tg-0pky">Wave Mode<br>(when robot stand by)</td><td class="tg-0pky">rbq/stand<br>rbq/walk<br><b>rbq/cmd_navigateTo</b></td></tr><tr><td class="tg-0pky">Fall Mode</td><td class="tg-0pky">rbq/RecoveryFlex</td></tr></tbody></table><br><h3 id="📡-2-low-level-state-topics" tabindex="-1">📡 2. Low-level State Topics <a class="header-anchor" href="#📡-2-low-level-state-topics" aria-label="Permalink to &quot;📡 2. Low-level State Topics&quot;">​</a></h3><p>These topics provide real-time feedback about the robot&#39;s internal state, such as posture, sensor readings, and system status.</p><table class="tg"><thead><tr><th class="tg-0pky"><b>Topics</b></th><th class="tg-0pky"><b>Data Structure</b></th><th class="tg-0pky"><b>Description</b></th></tr></thead><tbody><tr><td class="tg-0pky"><b>RobotState</b></td><td class="tg-0pky">int8 gait_state<br>bool joints_comm_checked<br>bool joints_calibrated<br>bool joints_control_started<br>bool comm_connected<br>sensor_msgs/Imu imu_state<br>sensor_msgs/JointState joint_states<br>rbq_msgs/BatteryState battery_state<br>rbq_msgs/FootState[] foot_states<br>geometry_msgs/VelocityStamped body_velocity_rt_world<br>geometry_msgs/PoseStamped body_pose_rt_world</td><td class="tg-0pky">This message contains robot state information and is published at 50Hz. The ‘BatteryState’ and ‘FootState’ messages are defined for the RBQ10. Other messages are defined by standard ROS message types<br># GaitState<br>int8 STATE_FALL = -2<br>int8 STATE_OFF = -1<br>int8 STATE_SIT = 0<br>int8 STATE_STAND = 1<br>int8 STATE_WALK = 2<br>int8 STATE_AIM = 3<br>int8 STATE_STAIRS = 4<br>int8 STATE_WAVE = 5<br>int8 STATE_RUN = 6</td></tr><tr><td class="tg-0pky"><b>BatteryState</b></td><td class="tg-0pky">string identifier<br>float64 charge_percentage<br>builtin_interfaces/Duration estimated_runtime<br>float64 current<br>float64 voltage<br>float64[] temperatures<br>uint8 status</td><td class="tg-0pky"># Status<br>uint8 STATUS_UNKNOWN = 0<br>uint8 STATUS_MISSING = 1<br>uint8 STATUS_CHARGING = 2<br>uint8 STATUS_DISCHARGING = 3<br>uint8 STATUS_BOOTING = 4</td></tr><tr><td class="tg-0pky"><b>FootState</b></td><td class="tg-0pky">geometry_msgs/Point foot_position_rt_body<br>geometry_msgs/Point foot_velocity_rt_body<br>uint8 contact</td><td class="tg-0pky">Foot position/velocity with respect to the local body frame. The origin of the body frame is at the center of the robot body, with the front direction as +x, the left direction as +y, and the upward direction as +z.<br># Contact<br>uint8 CONTACT_UNKNOWN = 0<br>uint8 CONTACT_MADE = 1<br>uint8 CONTACT_LOST = 2<br>Leg num 0 : Right-Hind leg (RH)<br>Leg num 1 : Left-Hind Leg (LH)<br>Leg num 2 : Right-Front Leg (RF)<br>Leg num 3 : Left-Front Leg (LF)</td></tr></tbody></table><br><blockquote><p>The msg about state is defined as :</p></blockquote><ul><li>RobotState</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># GaitState</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_FALL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_OFF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_SIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_STAND</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_WALK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_AIM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_STAIRS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_WAVE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATE_RUN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std_msgs/Header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gait_state</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> joints_comm_checked</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> joints_calibrated</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> joints_control_started</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> comm_connected</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_msgs/Imu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> imu_state</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_msgs/JointState</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> joint_states</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbq_msgs/BatteryState</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> battery_state</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbq_msgs/FootState[]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foot_states</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geometry_msgs/VelocityStamped</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> body_velocity_rt_world</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geometry_msgs/PoseStamped</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> body_pose_rt_world</span></span></code></pre></div><ul><li>BatteryState</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS_UNKNOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS_MISSING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS_CHARGING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS_DISCHARGING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS_BOOTING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std_msgs/Header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> identifier</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> charge_percentage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> voltage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64[]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temperatures</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div><ul><li>FootState</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Contact</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONTACT_UNKNOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONTACT_MADE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONTACT_LOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geometry_msgs/Point</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foot_position_rt_body</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geometry_msgs/Point</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foot_velocity_rt_body</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uint8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contact</span></span></code></pre></div><ul><li>FootStates</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std_msgs/Header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbq_msgs/FootState[]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foot_states</span></span></code></pre></div><h2 id="robot-control" tabindex="-1">Robot control <a class="header-anchor" href="#robot-control" aria-label="Permalink to &quot;Robot control&quot;">​</a></h2><h3 id="🎮-3-command-topics" tabindex="-1">🎮 3. Command Topics <a class="header-anchor" href="#🎮-3-command-topics" aria-label="Permalink to &quot;🎮 3. Command Topics&quot;">​</a></h3><p>The following topics are used to send high-level and navigation commands to the RBQ robot.</p><p>All commands follow standard ROS 2 message types or custom <code>rbq_msgs</code> definitions. <br></p><blockquote><p>Command topics are defined as :</p></blockquote><table class="tg"><thead><tr><th class="tg-0lax"><b>topics</b></th><th class="tg-0lax"><b>description</b></th></tr></thead><tbody><tr><td class="tg-0lax">autoStart</td><td class="tg-0lax">Initialize Joint position and start joint control <br>AutoStart process can be checked by ‘InitState’ topic<br>CAN check -&gt; Find Home -&gt; Control Start flags will be on</td></tr><tr><td class="tg-0lax">DampingMode</td><td class="tg-0lax">the robot to lower itself by applying damping to its leg joints</td></tr><tr><td class="tg-0lax">EmergencyOff</td><td class="tg-0lax">forcibly cuts power to the robot&#39;s leg joints. This action may cause a shock to the robot.</td></tr><tr><td class="tg-0lax"><b>Fall_Recovery</b></td><td class="tg-0lax">The ‘Fall_Recovery topi’c is accepted only when the robot is in Fall mode. It commands the robot to return to sitting mode through specific joint movements.</td></tr><tr><td class="tg-0lax"><b>rbq/cmd_highLevel<br>{<br>float64 roll<br>float64 pitch<br>float64 yaw<br>float64 vel_x<br>float64 vel_y<br>float64 omega_z<br>float64 delta_body_h<br>float64 delta_foot_h<br>}</b></td><td class="tg-0lax">The HighLevelCMD topic enables high-level commands to be given to the robot depending on its current gait state<br><br> • <b>Standing Mode</b><br>adjusts the robot&#39;s body posture in the Standing Mode based on roll, pitch, and yaw (according to ZYX Euler angles). The parameter body_H specifies the height of the robot&#39;s body<br>- Range<br>Roll : -25 ~ 25 deg<br>Pitch : -20 ~ 20deg<br>Yaw : -25 ~ 25deg<br>Delta_body_height : -0.15 ~ 0.05 m</td></tr></tbody></table><br><table class="tg"><thead><tr><th class="tg-0pky"><b>topics</b></th><th class="tg-0pky"><b>description</b></th></tr></thead><tbody><tr><td class="tg-0pky"><b>rbq/cmd_highLevel<br>{<br>float64 roll<br>float64 pitch<br>float64 yaw<br>float64 vel_x<br>float64 vel_y<br>float64 omega_z<br>float64 delta_body_h<br>float64 foot_h<br>}</b></td><td class="tg-0pky">• <b>Walk Mode</b><br>Set movement speed of the robot in the local coordinate system while in the trotting gait state. Vx, Vy represents the forward speed, lateral speed and Wz represents rotational speed. During trotting, delta_body_H is used to set the height of the body from its default body height, foot_H is used to set the foot lifting height, and pitch is used to set the pitch angle of the body.“<br>Range<br>Vx : - 1.0 ~ 1.2 m/s<br>Vy : - 0.4 ~ 0.4 m/s<br>Wz: -75 ~ 75 des/s<br>Delta_Body_H : -0.15 ~ +0.05 m (default : 0.45)<br>pitch: -15 ~ 15 deg<br>Delta_foot_H : -0.06 ~ + 0.04 m (default : 0.14)<br><br>• <b>Stairs Mode</b><br>specifies the robot&#39;s forward, lateral, and rotational speeds in the local frame while in stairs mode<br>Range<br>Vx : -0.5 ~ 0.5 m/s<br>Vy : - 0.2 ~ 0.2 m/s<br>Wz: -15 ~ 15 deg/s</td></tr></tbody></table><br><table class="tg"><thead><tr><th class="tg-0lax"><b>topics</b></th><th class="tg-0lax"><b>description</b></th></tr></thead><tbody><tr><td class="tg-0lax"><b>rbq/cmd_highLevel<br>{<br>float64 roll<br>float64 pitch<br>float64 yaw<br>float64 vel_x<br>float64 vel_y<br>float64 omega_z<br>float64 delta_body_h<br>float64 delta_foot_h<br>}</b></td><td class="tg-0lax">• <b>Run Mode</b><br>specifies the robot&#39;s forward, lateral, and rotational speeds in the local frame while in Running mode<br>Range<br>Vx : - 1m/s ~ 1.8 m/s<br>Vy : - 0.6 m/s ~ 0.6 m/s<br>Wz: - 75 deg/s ~ 75 deg/s<br><br>• <b>Wave Mode</b><br>specifies the robot&#39;s forward, lateral, and rotational speeds in the local frame while in Wave mode<br>Range<br>Vx : - 0.3 m/s ~ 0.3 m/s<br>Vy : - 0.2 m/s ~ 0.2 m/s<br>Wz: -20deg/s ~ 20deg/s</td></tr><tr><td class="tg-0lax"><b>rbq/cmd_navigateTo<br>{<br>Geometry_msgs::Pose<br>uint8 mode<br>}</b></td><td class="tg-0lax">This command moves the robot to the position defined by ‘Pose’ type in the current robot local frame, according to the selected ‘approach_mode’. <br><br>Approach Mode<br>0 : Rotate to target point -&gt; straight walk -&gt; rotate to target yaw<br>1 : rotate to target yaw -&gt; diagonal walk to target point<br>2 : diagonal walk to target point -&gt; rotate to target yaw<br>3 : rotate to target yaw and diagonal walk to target point simultaneously<br>4 : Approach mode 3 with wide leg walking</td></tr></tbody></table><br><blockquote><p>The msg of High-Level command is defined as :</p></blockquote><ul><li>HighLevelCommand</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std_msgs/Header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> identifier</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> roll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pitch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yaw</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vel_x</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vel_y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> omega_z</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delta_body_h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delta_foot_h</span></span></code></pre></div><br><h1 id="🖼️-rviz-visualization" tabindex="-1">🖼️ RViz Visualization <a class="header-anchor" href="#🖼️-rviz-visualization" aria-label="Permalink to &quot;🖼️ RViz Visualization&quot;">​</a></h1><h3 id="launch-rviz2-with-gui" tabindex="-1">Launch RViz2 with GUI <a class="header-anchor" href="#launch-rviz2-with-gui" aria-label="Permalink to &quot;Launch RViz2 with GUI&quot;">​</a></h3><aside> ✅ Launch the RBQ ROS 2 driver before launching the RViz2 driver. </aside><blockquote><p>You can simultaneously visualize and send commands to the robot through the GUI on the left side of RViz.</p></blockquote><br><h1 id="📘-help" tabindex="-1">📘 Help <a class="header-anchor" href="#📘-help" aria-label="Permalink to &quot;📘 Help&quot;">​</a></h1><p>If you encounter problems when using this repository, feel free to open an issue.</p><h1 id="🤝-contributing" tabindex="-1">🤝 Contributing <a class="header-anchor" href="#🤝-contributing" aria-label="Permalink to &quot;🤝 Contributing&quot;">​</a></h1><p>Feel free to contribute!</p><h2 id="👥-contributors" tabindex="-1">👥 Contributors <a class="header-anchor" href="#👥-contributors" aria-label="Permalink to &quot;👥 Contributors&quot;">​</a></h2><p>This project is provided by the <a href="https://rainbow-robotics.com/" target="_blank" rel="noreferrer">Rainbow-Robotics</a>.</p><p>Rainbow-Robotics contributors:</p><ul><li>Gurbann</li></ul>`,83)]))}const F=t(r,[["render",o]]);export{g as __pageData,F as default};
