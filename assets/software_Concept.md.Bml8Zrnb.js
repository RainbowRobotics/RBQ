import{_ as t,c as o,o as a,ae as r}from"./chunks/framework.DRno8Cka.js";const i="/RBQ/assets/diagram.htR05ooW.png",p=JSON.parse('{"title":"System Diagram","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"software/Concept.md","filePath":"software/Concept.md","lastUpdated":1750224677000}'),n={name:"software/Concept.md"};function s(l,e,d,c,m,h){return a(),o("div",null,e[0]||(e[0]=[r('<h1 id="system-diagram" tabindex="-1">System Diagram <a class="header-anchor" href="#system-diagram" aria-label="Permalink to &quot;System Diagram&quot;">â€‹</a></h1><br><figure><img src="'+i+'" alt="missing"></figure><br><p><br><br></p><h1 id="sdk" tabindex="-1">SDK <a class="header-anchor" href="#sdk" aria-label="Permalink to &quot;SDK&quot;">â€‹</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">â€‹</a></h2><p>The <strong>RBQ SDK</strong> is built to provide developers with a flexible and scalable interface for working with the <strong>RBQ quadruped robot</strong>.</p><p>It supports both <strong>low-level control</strong> and <strong>high-level commands</strong>, so whether you&#39;re building your own controller or integrating the robot into an existing system, there&#39;s a suitable entry point.</p><h2 id="ðŸ”§-low-level-access" tabindex="-1">ðŸ”§ Low-Level Access <a class="header-anchor" href="#ðŸ”§-low-level-access" aria-label="Permalink to &quot;ðŸ”§ Low-Level Access&quot;">â€‹</a></h2><p>The <strong>LV0 SDK</strong> offers direct access to the robotâ€™s sensors and actuators.</p><p>It is intended for developers who need <strong>precise control</strong> and <strong>real-time feedback</strong> from the hardware.</p><h3 id="âœ…-key-features" tabindex="-1">âœ… Key Features: <a class="header-anchor" href="#âœ…-key-features" aria-label="Permalink to &quot;âœ… Key Features:&quot;">â€‹</a></h3><ul><li>Read raw sensor data: IMU, joint encoders, etc.</li><li>Send joint-level commands: position, velocity, torque</li><li>Ideal for: <ul><li>Custom controller development</li><li>Low-latency real-time experiments</li><li>Research in locomotion control</li></ul></li></ul><h2 id="ðŸŽ¯-high-level-command-interface" tabindex="-1">ðŸŽ¯ High-Level Command Interface <a class="header-anchor" href="#ðŸŽ¯-high-level-command-interface" aria-label="Permalink to &quot;ðŸŽ¯ High-Level Command Interface&quot;">â€‹</a></h2><p>The <strong>LV1 SDK</strong> provides a <strong>simplified interface</strong> to control the robot using predefined actions and commands, without needing to manage low-level details.</p><h3 id="âœ…-key-features-1" tabindex="-1">âœ… Key Features: <a class="header-anchor" href="#âœ…-key-features-1" aria-label="Permalink to &quot;âœ… Key Features:&quot;">â€‹</a></h3><ul><li>Execute common motions and gait behaviors with a single command</li><li>Seamless integration with the <strong>RBQ APP</strong> command set</li><li>APIs available in: <ul><li>C/C++</li><li>Python</li><li>ROS2</li></ul></li><li>Ideal for: <ul><li>Application developers</li><li>System integration</li><li>Rapid prototyping with minimal setup</li></ul></li></ul><h2 id="ðŸ“¡-supported-communication-interfaces" tabindex="-1">ðŸ“¡ Supported Communication Interfaces <a class="header-anchor" href="#ðŸ“¡-supported-communication-interfaces" aria-label="Permalink to &quot;ðŸ“¡ Supported Communication Interfaces&quot;">â€‹</a></h2><p>The SDK supports multiple communication protocols depending on your use case:</p><table><tr><th>Interface</th><th>Description</th></tr><tr><td>ROS2 SDK</td><td>For robotics developers in the ROS2 ecosystem</td></tr><tr><td>DDS SDK</td><td>For real-time, distributed communication using DDS</td></tr><tr><td>TCP / UDP</td><td>Lightweight direct packet communication for custom tools</td></tr></table>',21)]))}const g=t(n,[["render",s]]);export{p as __pageData,g as default};
