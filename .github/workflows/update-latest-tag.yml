name: Release & Update Latest Tags

on:
  push:
    paths:
      - 'hex/*.hex'

jobs:
  release-and-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Find updated hex files
        id: hexinfo
        run: |
          mkdir hexinfo_outputs
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^hex/.*\.hex$')

          for FILE in $FILES; do
            echo "Found file: $FILE"

            if [[ "$FILE" == hex/QuadLeg_b* ]]; then
              TYPE=QuadLeg
            elif [[ "$FILE" == hex/PDU_b* ]]; then
              TYPE=PDU
            else
              echo "Unrecognized hex file format: $FILE"
              continue
            fi

            F_VER=$(echo "$FILE" | grep -oP 'f\K[0-9]+')
            MAJOR=0
            MINOR=$((F_VER / 10))
            PATCH=$((F_VER % 10))
            VERSION=v${MAJOR}.${MINOR}.${PATCH}

            echo "type=$TYPE" >> hexinfo_outputs/${TYPE}.env
            echo "version_tag=${TYPE}-${VERSION}" >> hexinfo_outputs/${TYPE}.env
            echo "latest_tag=${TYPE}-latest" >> hexinfo_outputs/${TYPE}.env
            echo "filename=$(basename $FILE)" >> hexinfo_outputs/${TYPE}.env
            echo "filepath=$FILE" >> hexinfo_outputs/${TYPE}.env
          done

      - name: Process and tag each hex
        run: |
          for ENV_FILE in hexinfo_outputs/*.env; do
            source $ENV_FILE

            echo "Processing $type ($filename)"
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            # Create version tag
            git tag $version_tag $GITHUB_SHA || true
            git push origin $version_tag || true

            # Update latest tag
            git tag -f $latest_tag $GITHUB_SHA
            git push -f origin $latest_tag

            # Create tar.gz for latest
            mkdir -p tmp_release
            cp $filepath tmp_release/
            tar -czf ${type}.tar.gz -C tmp_release $filename

            # Upload versioned release
            gh release create $version_tag $filepath -t "$version_tag" -n "Auto release for $filename" || true

            # Upload latest release
            gh release delete $latest_tag -y || true
            gh release create $latest_tag ${type}.tar.gz -t "$latest_tag" -n "Auto latest release for $filename"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

